{"ast":null,"code":"var _jsxFileName = \"C:\\\\medi-scanner\\\\front-end\\\\front-end\\\\src\\\\InjuryList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogList = _ref => {\n  let {\n    blogs,\n    title\n  } = _ref;\n  // const blogs = props.blogs;\n  // const title = props.title;\n  // console.log(blogs);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Written by \", blog.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = BlogList;\nexport default BlogList;\nvar _c;\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["BlogList","blogs","title","map","blog","author","id"],"sources":["C:/medi-scanner/front-end/front-end/src/InjuryList.js"],"sourcesContent":["const BlogList = ({ blogs, title }) => {\r\n  // const blogs = props.blogs;\r\n  // const title = props.title;\r\n  // console.log(blogs);\r\n\r\n  return (\r\n    <div className=\"blog-list\">\r\n      <h2>{title}</h2>\r\n      {blogs.map((blog) => (\r\n        <div className=\"blog-preview\" key={blog.id}>\r\n          <h2>{blog.title}</h2>\r\n          <p>Written by {blog.author}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogList;\r\n"],"mappings":";;AAAA,MAAMA,QAAQ,GAAG,QAAsB;EAAA,IAArB;IAAEC,KAAK;IAAEC;EAAM,CAAC;EAChC;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAA,UAAKA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,EACfD,KAAK,CAACE,GAAG,CAAEC,IAAI,iBACd;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B;QAAA,UAAKA,IAAI,CAACF;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eACrB;QAAA,0BAAeE,IAAI,CAACC,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA,GAFED,IAAI,CAACE,EAAE;MAAA;MAAA;MAAA;IAAA,QAI3C,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,KAhBIN,QAAQ;AAkBd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}